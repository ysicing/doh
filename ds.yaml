---
apiVersion: tailscale.com/v1alpha1
kind: ProxyClass
metadata:
  name: nogfw
  namespace: ds-system
spec:
  statefulSet:
    pod:
      nodeSelector:
        node-role.kubernetes.io/nogfw-ipv6: "true"
      tolerations:
        - operator: "Exists"
---
apiVersion: apps.kruise.io/v1alpha1
kind: DaemonSet
metadata:
  name: doh
  namespace: ds-system
  annotations:
    apps.kruise.io/image-predownload-parallelism: "10"
  labels:
    app: doh
spec:
  updateStrategy:
    type: RollingUpdate
    rollingUpdate:
      rollingUpdateType: Surging
  selector:
    matchLabels:
      app: doh
  template:
    metadata:
      labels:
        app: doh
    spec:
      hostNetwork: true
      nodeSelector:
        node-role.kubernetes.io/nogfw-ipv6: "true"
      tolerations:
      - operator: Exists
        effect: NoSchedule
      containers:
      - name: doh
        image: ghcr.io/ysicing/doh:latest
        imagePullPolicy: Always
        resources:
          limits:
            memory: 200Mi
          requests:
            cpu: 100m
            memory: 200Mi
        env:
        - name: NODE_IP
          valueFrom:
            fieldRef:
              fieldPath: status.hostIP
---
apiVersion: v1
kind: Service
metadata:
  name: doh
  namespace: ds-system
  labels:
    tailscale.com/proxy-class: "nogfw"
spec:
  selector:
    app: doh
  type: LoadBalancer
  loadBalancerClass: tailscale
  ports:
  - name: doh
    protocol: TCP
    port: 80
    targetPort: 65001
# ---
# apiVersion: traefik.io/v1alpha1
# kind: Middleware
# metadata:
#   name: redirect-https
#   namespace: ds-system
# spec:
#   redirectScheme:
#     scheme: https
# ---
# apiVersion: traefik.io/v1alpha1
# kind: IngressRoute
# metadata:
#   name: doh-http
#   namespace: ds-system
# spec:
#   entryPoints:
#     - web
#   routes:
#   - match: Host(`dnspod.ysicing.net`)
#     kind: Rule
#     services:
#     - name: doh
#       port: 80
#     middlewares:
#       - name: redirect-https
# ---
# apiVersion: traefik.io/v1alpha1
# kind: IngressRoute
# metadata:
#   name: doh-tls
#   namespace: ds-system
# spec:
#   entryPoints:
#     - websecure
#   routes:
#     - match: Host(`dnspod.ysicing.net`)
#       kind: Rule
#       services:
#         - name: doh
#           port: 80
#   tls:
#     certResolver: myresolver
